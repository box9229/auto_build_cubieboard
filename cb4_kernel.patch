diff --git a/drivers/net/ethernet/sunxi/eth/sunxi_geth.c b/drivers/net/ethernet/sunxi/eth/sunxi_geth.c
index 862a033..696e855 100644
--- a/drivers/net/ethernet/sunxi/eth/sunxi_geth.c
+++ b/drivers/net/ethernet/sunxi/eth/sunxi_geth.c
@@ -1419,23 +1419,28 @@ static int geth_script_parse(struct platform_device *pdev)
 
 #ifdef CONFIG_GETH_PHY_POWER
 	memset(power_tb, 0, sizeof(power_tb));
-	for (cnt = 0; cnt < ARRAY_SIZE(power_tb); cnt++) {
-		char *vol;
-		size_t len;
-		snprintf(power, 15, "gmac_power%u", (cnt+1));
-		type = script_get_item((char *)dev_name(&pdev->dev), power, &item);
-		if(SCIRPT_ITEM_VALUE_TYPE_STR != type)
-			continue;
-
-		len = strlen((char *)item.val);
-		vol = strnchr((const char *)item.val, len, ':');
-		if (vol) {
-			len = (size_t)(vol - (char *)item.val);
-			power_tb[cnt].vol = simple_strtoul(++vol, NULL, 0);
-		}
-
-		power_tb[cnt].name = kstrndup((char *)item.val, len, GFP_KERNEL);
-	}
+	power_tb[0].vol = simple_strtoul((char *)"3000000", NULL, 0);
+	power_tb[0].name = kstrndup((char *)"axp15_cldo1", 11, GFP_KERNEL);
+	power_tb[1].vol = 0;
+	power_tb[2].name = kstrndup((char *)"axp22_ldoio1", 12, GFP_KERNEL);
+	
+//	for (cnt = 0; cnt < ARRAY_SIZE(power_tb); cnt++) {
+//		char *vol;
+//		size_t len;
+//		snprintf(power, 15, "gmac_power%u", (cnt+1));
+//		type = script_get_item((char *)dev_name(&pdev->dev), power, &item);
+//		if(SCIRPT_ITEM_VALUE_TYPE_STR != type)
+//			continue;
+//
+//		len = strlen((char *)item.val);
+//		vol = strnchr((const char *)item.val, len, ':');
+//		if (vol) {
+//			len = (size_t)(vol - (char *)item.val);
+//			power_tb[cnt].vol = simple_strtoul(++vol, NULL, 0);
+//		}
+//
+//		power_tb[cnt].name = kstrndup((char *)item.val, len, GFP_KERNEL);
+//	}
 #endif
 #endif
 	return 0;
